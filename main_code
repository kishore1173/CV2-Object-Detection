# Install the modules.
!pip install opencv-python
!pip install ultralytics 

import cv2
from ultralytics import YOLO
from google.colab.patches import cv2_imshow  # For displaying images in Colab

# Load the model
yolo = YOLO('yolov8s.pt')

# Load the image
image_path = "cat.jpeg"  # Replace with your image path
image = cv2.imread(image_path)

# Perform object detection
results = yolo(image)

# Get class names
class_names = results[0].names

#display the class
print(class_names)

# Iterate over detections
for result in results:
    for box in result.boxes:
        if box.conf[0] > 0.4:  # Confidence threshold
            x1, y1, x2, y2 = map(int, box.xyxy[0])  # Bounding box coordinates
            cls = int(box.cls[0])  # Class index
            class_name = class_names[cls]  # Class name
            print(f"Class: {class_name}, Confidence: {box.conf[0]:.2f}")
            
            # Draw bounding box
            cv2.rectangle(image, (x1, y1), (x2, y2), (0, 255, 0), 5)
            cv2.putText(image, f"{class_name} {box.conf[0]:.2f}", (x1, y1 - 10),
                        cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)

# Display the image
cv2_imshow(image)  # Use cv2_imshow instead of cv2.imshow()



#use if not run in colab.  
#cv2.imshow('Object Detection', image)
#cv2.waitKey(0)
#cv2.destroyAllWindows()
